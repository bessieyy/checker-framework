package org.checkerframework.framework.qual:
annotation @FromByteCode: @java.lang.annotation.Target(value={METHOD,CONSTRUCTOR,TYPE,PACKAGE}) @java.lang.annotation.Retention(value=RUNTIME)

package org.checkerframework.checker.lock.qual:
annotation @LockPossiblyHeld: @java.lang.annotation.Target(value={}) @java.lang.annotation.Retention(value=RUNTIME)

package org.checkerframework.checker.lock.qual:
annotation @GuardedBy: @java.lang.annotation.Target(value={TYPE_USE,TYPE_PARAMETER}) @java.lang.annotation.Retention(value=RUNTIME)
    String[] value

package org.checkerframework.dataflow.qual:
annotation @SideEffectFree: @java.lang.annotation.Retention(value=RUNTIME) @java.lang.annotation.Target(value={METHOD,CONSTRUCTOR})

package java.util:
class IntSummaryStatistics:

    method <init>()V: @org.checkerframework.framework.qual.FromByteCode
        return:

    method accept(I)V: @org.checkerframework.framework.qual.FromByteCode
        return:
        parameter #0:
            type: @org.checkerframework.checker.lock.qual.LockPossiblyHeld @org.checkerframework.checker.lock.qual.GuardedBy

    method combine(Ljava/util/IntSummaryStatistics;)V: @org.checkerframework.framework.qual.FromByteCode
        return:
        parameter #0:
            type: @org.checkerframework.checker.lock.qual.LockPossiblyHeld @org.checkerframework.checker.lock.qual.GuardedBy

    method getCount()J: @org.checkerframework.framework.qual.FromByteCode
        return: @org.checkerframework.checker.lock.qual.LockPossiblyHeld @org.checkerframework.checker.lock.qual.GuardedBy

    method getSum()J: @org.checkerframework.framework.qual.FromByteCode
        return: @org.checkerframework.checker.lock.qual.LockPossiblyHeld @org.checkerframework.checker.lock.qual.GuardedBy

    method getMin()I: @org.checkerframework.framework.qual.FromByteCode
        return: @org.checkerframework.checker.lock.qual.LockPossiblyHeld @org.checkerframework.checker.lock.qual.GuardedBy

    method getMax()I: @org.checkerframework.framework.qual.FromByteCode
        return: @org.checkerframework.checker.lock.qual.LockPossiblyHeld @org.checkerframework.checker.lock.qual.GuardedBy

    method getAverage()D: @org.checkerframework.framework.qual.FromByteCode
        return: @org.checkerframework.checker.lock.qual.LockPossiblyHeld @org.checkerframework.checker.lock.qual.GuardedBy

    method toString()Ljava/lang/String;: @org.checkerframework.dataflow.qual.SideEffectFree @org.checkerframework.framework.qual.FromByteCode
        return: @org.checkerframework.checker.lock.qual.LockPossiblyHeld @org.checkerframework.checker.lock.qual.GuardedBy

