package org.checkerframework.framework.qual:
annotation @FromByteCode: @java.lang.annotation.Target(value={METHOD,CONSTRUCTOR,TYPE,PACKAGE}) @java.lang.annotation.Retention(value=RUNTIME)

package org.checkerframework.checker.lock.qual:
annotation @LockPossiblyHeld: @java.lang.annotation.Target(value={}) @java.lang.annotation.Retention(value=RUNTIME)

package org.checkerframework.checker.lock.qual:
annotation @GuardedBy: @java.lang.annotation.Target(value={TYPE_USE,TYPE_PARAMETER}) @java.lang.annotation.Retention(value=RUNTIME)
    String[] value

package org.checkerframework.checker.nullness.qual:
annotation @Nullable: @java.lang.annotation.Target(value={TYPE_USE,TYPE_PARAMETER}) @java.lang.annotation.Retention(value=RUNTIME)

package java.util:
class Observable:

    method <init>()V: @org.checkerframework.framework.qual.FromByteCode
        return:

    method addObserver(Ljava/util/Observer;)V: @org.checkerframework.framework.qual.FromByteCode
        return:
        parameter #0:
            type: @org.checkerframework.checker.lock.qual.LockPossiblyHeld @org.checkerframework.checker.lock.qual.GuardedBy

    method deleteObserver(Ljava/util/Observer;)V: @org.checkerframework.framework.qual.FromByteCode
        return:
        parameter #0:
            type: @org.checkerframework.checker.nullness.qual.Nullable @org.checkerframework.checker.lock.qual.LockPossiblyHeld @org.checkerframework.checker.lock.qual.GuardedBy

    method notifyObservers()V: @org.checkerframework.framework.qual.FromByteCode
        return:

    method notifyObservers(Ljava/lang/Object;)V: @org.checkerframework.framework.qual.FromByteCode
        return:
        parameter #0:
            type: @org.checkerframework.checker.nullness.qual.Nullable @org.checkerframework.checker.lock.qual.LockPossiblyHeld @org.checkerframework.checker.lock.qual.GuardedBy

    method deleteObservers()V: @org.checkerframework.framework.qual.FromByteCode
        return:

    method hasChanged()Z: @org.checkerframework.framework.qual.FromByteCode
        return: @org.checkerframework.checker.lock.qual.LockPossiblyHeld @org.checkerframework.checker.lock.qual.GuardedBy

    method countObservers()I: @org.checkerframework.framework.qual.FromByteCode
        return: @org.checkerframework.checker.lock.qual.LockPossiblyHeld @org.checkerframework.checker.lock.qual.GuardedBy

