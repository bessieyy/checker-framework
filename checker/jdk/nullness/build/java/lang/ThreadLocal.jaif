package org.checkerframework.checker.nullness.qual:
annotation @Nullable: @java.lang.annotation.Target(value={TYPE_USE,TYPE_PARAMETER}) @java.lang.annotation.Retention(value=RUNTIME)

package org.checkerframework.checker.nullness.qual:
annotation @KeyForBottom: @java.lang.annotation.Target(value={TYPE_USE,TYPE_PARAMETER}) @java.lang.annotation.Retention(value=RUNTIME)

package org.checkerframework.checker.initialization.qual:
annotation @Initialized: @java.lang.annotation.Target(value={TYPE_USE,TYPE_PARAMETER}) @java.lang.annotation.Retention(value=RUNTIME)

package org.checkerframework.checker.nullness.qual:
annotation @UnknownKeyFor: @java.lang.annotation.Target(value={TYPE_USE,TYPE_PARAMETER}) @java.lang.annotation.Retention(value=RUNTIME)

package org.checkerframework.framework.qual:
annotation @FromByteCode: @java.lang.annotation.Target(value={METHOD,CONSTRUCTOR,TYPE,PACKAGE}) @java.lang.annotation.Retention(value=RUNTIME)

package java.lang:
class ThreadLocal:
    typeparam 0: @org.checkerframework.checker.nullness.qual.Nullable @org.checkerframework.checker.nullness.qual.KeyForBottom @org.checkerframework.checker.initialization.qual.Initialized
    bound 0 &0: @org.checkerframework.checker.nullness.qual.Nullable @org.checkerframework.checker.nullness.qual.UnknownKeyFor @org.checkerframework.checker.initialization.qual.Initialized

    method <init>()V: @org.checkerframework.framework.qual.FromByteCode
        return:

    method get()Ljava/lang/Object;: @org.checkerframework.framework.qual.FromByteCode
        return:

    method set(Ljava/lang/Object;)V: @org.checkerframework.framework.qual.FromByteCode
        return:

    method remove()V: @org.checkerframework.framework.qual.FromByteCode
        return:

