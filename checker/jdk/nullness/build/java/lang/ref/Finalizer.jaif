package java.lang:
annotation @SuppressWarnings: @java.lang.annotation.Target(value={TYPE,FIELD,METHOD,PARAMETER,CONSTRUCTOR,LOCAL_VARIABLE}) @java.lang.annotation.Retention(value=SOURCE)
    String[] value

package org.checkerframework.framework.qual:
annotation @FromByteCode: @java.lang.annotation.Target(value={METHOD,CONSTRUCTOR,TYPE,PACKAGE}) @java.lang.annotation.Retention(value=RUNTIME)

package org.checkerframework.checker.nullness.qual:
annotation @UnknownKeyFor: @java.lang.annotation.Target(value={TYPE_USE,TYPE_PARAMETER}) @java.lang.annotation.Retention(value=RUNTIME)

package org.checkerframework.checker.nullness.qual:
annotation @NonNull: @java.lang.annotation.Target(value={TYPE_USE,TYPE_PARAMETER}) @java.lang.annotation.Retention(value=RUNTIME)

package org.checkerframework.checker.initialization.qual:
annotation @Initialized: @java.lang.annotation.Target(value={TYPE_USE,TYPE_PARAMETER}) @java.lang.annotation.Retention(value=RUNTIME)

package java.lang.ref:
class Finalizer: @java.lang.SuppressWarnings(value={"rawtypes"})

    field queue:
        type: @org.checkerframework.checker.nullness.qual.UnknownKeyFor @org.checkerframework.checker.nullness.qual.NonNull @org.checkerframework.checker.initialization.qual.Initialized

    field unfinalized:
        type: @org.checkerframework.checker.nullness.qual.UnknownKeyFor @org.checkerframework.checker.nullness.qual.NonNull @org.checkerframework.checker.initialization.qual.Initialized

    field lock:
        type: @org.checkerframework.checker.nullness.qual.UnknownKeyFor @org.checkerframework.checker.nullness.qual.NonNull @org.checkerframework.checker.initialization.qual.Initialized

    field next:
        type: @org.checkerframework.checker.nullness.qual.UnknownKeyFor @org.checkerframework.checker.nullness.qual.NonNull @org.checkerframework.checker.initialization.qual.Initialized

    field prev:
        type: @org.checkerframework.checker.nullness.qual.UnknownKeyFor @org.checkerframework.checker.nullness.qual.NonNull @org.checkerframework.checker.initialization.qual.Initialized

    method invokeFinalizeMethod(Ljava/lang/Object;)V: @org.checkerframework.framework.qual.FromByteCode
        return:
        parameter #0:
            type: @org.checkerframework.checker.nullness.qual.UnknownKeyFor @org.checkerframework.checker.nullness.qual.NonNull @org.checkerframework.checker.initialization.qual.Initialized

    method hasBeenFinalized()Z: @org.checkerframework.framework.qual.FromByteCode
        return: @org.checkerframework.checker.nullness.qual.UnknownKeyFor @org.checkerframework.checker.nullness.qual.NonNull @org.checkerframework.checker.initialization.qual.Initialized

    method add()V: @org.checkerframework.framework.qual.FromByteCode
        return:

    method remove()V: @org.checkerframework.framework.qual.FromByteCode
        return:

    method <init>(Ljava/lang/Object;)V: @org.checkerframework.framework.qual.FromByteCode @java.lang.SuppressWarnings(value={"unchecked"})
        return:
        parameter #0:
            type: @org.checkerframework.checker.nullness.qual.UnknownKeyFor @org.checkerframework.checker.nullness.qual.NonNull @org.checkerframework.checker.initialization.qual.Initialized

    method register(Ljava/lang/Object;)V: @org.checkerframework.framework.qual.FromByteCode
        return:
        parameter #0:
            type: @org.checkerframework.checker.nullness.qual.UnknownKeyFor @org.checkerframework.checker.nullness.qual.NonNull @org.checkerframework.checker.initialization.qual.Initialized

    method runFinalizer()V: @org.checkerframework.framework.qual.FromByteCode
        return:

    method forkSecondaryFinalizer(Ljava/lang/Runnable;)V: @org.checkerframework.framework.qual.FromByteCode
        return:
        parameter #0:
            type: @org.checkerframework.checker.nullness.qual.UnknownKeyFor @org.checkerframework.checker.nullness.qual.NonNull @org.checkerframework.checker.initialization.qual.Initialized

    method runFinalization()V: @org.checkerframework.framework.qual.FromByteCode
        return:

    method runAllFinalizers()V: @org.checkerframework.framework.qual.FromByteCode
        return:

    method access$000()Ljava/lang/ref/ReferenceQueue;:
        return:

    method access$100(Ljava/lang/ref/Finalizer;)V:
        return:

    method access$200()Ljava/lang/Object;:
        return:

    method access$300()Ljava/lang/ref/Finalizer;:
        return:

    method access$302(Ljava/lang/ref/Finalizer;)Ljava/lang/ref/Finalizer;:
        return:

    method access$400(Ljava/lang/ref/Finalizer;)Ljava/lang/ref/Finalizer;:
        return:

    method <clinit>()V:
        return:

